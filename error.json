{
    "time": "2021-07-16T10:43:21.251991804+05:30",
    "level": "-",
    "prefix": "echo",
    "file": "recover.go",
    "line": "92",
    "message": "[PANIC RECOVER] runtime error: invalid memory address or nil pointer dereference goroutine 19 [running]:\ngithub.com/labstack/echo/v4/middleware.RecoverWithConfig.func1.1.1(0x77cf30, 0x1000, 0x0, 0x7cf438, 0xc000136500)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/middleware/recover.go:77 +0x105\npanic(0x70e480, 0x96ea30)\n\t/usr/lib/go/src/runtime/panic.go:965 +0x1b9\ngithub.com/incrypto32/airdropbot/handler.(*Handler).webHookHandler(0xc0000993e0, 0x7cf438, 0xc000136500, 0xc000046c00, 0x7f69455b7ec8)\n\t/home/incrypto/dev/go_projects/airdropbot/handler/handler.go:45 +0x13f\ngithub.com/labstack/echo/v4.(*Echo).add.func1(0x7cf438, 0xc000136500, 0x72a400, 0x1)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/echo.go:544 +0x62\ngithub.com/labstack/echo/v4/middleware.RecoverWithConfig.func1.1(0x7cf438, 0xc000136500, 0x0, 0x0)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/middleware/recover.go:98 +0x142\ngithub.com/labstack/echo/v4.(*Echo).ServeHTTP(0xc0000d26c0, 0x7cb930, 0xc0001441c0, 0xc000158000)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/echo.go:654 +0x2bc\nnet/http.serverHandler.ServeHTTP(0xc000144000, 0x7cb930, 0xc0001441c0, 0xc000158000)\n\t/usr/lib/go/src/net/http/server.go:2887 +0xa3\nnet/http.(*conn).serve(0xc000136460, 0x7cc140, 0xc0000dcb00)\n\t/usr/lib/go/src/net/http/server.go:1952 +0x8cd\ncreated by net/http.(*Server).Serve\n\t/usr/lib/go/src/net/http/server.go:3013 +0x39b\n\ngoroutine 1 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f69455c0f58, 0x72, 0x0)\n\t/usr/lib/go/src/runtime/netpoll.go:222 +0x55\ninternal/poll.(*pollDesc).wait(0xc00010e318, 0x72, 0x0, 0x0, 0x76329b)\n\t/usr/lib/go/src/internal/poll/fd_poll_runtime.go:87 +0x45\ninternal/poll.(*pollDesc).waitRead(...)\n\t/usr/lib/go/src/internal/poll/fd_poll_runtime.go:92\ninternal/poll.(*FD).Accept(0xc00010e300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/usr/lib/go/src/internal/poll/fd_unix.go:401 +0x212\nnet.(*netFD).accept(0xc00010e300, 0x732520, 0x7f69455b7ec8, 0x30)\n\t/usr/lib/go/src/net/fd_unix.go:172 +0x45\nnet.(*TCPListener).accept(0xc0000a85b8, 0xc0000ba690, 0x0, 0x980ec0)\n\t/usr/lib/go/src/net/tcpsock_posix.go:139 +0x32\nnet.(*TCPListener).AcceptTCP(0xc0000a85b8, 0xbd08774ead2c801, 0x0, 0x0)\n\t/usr/lib/go/src/net/tcpsock.go:248 +0x65\ngithub.com/labstack/echo/v4.tcpKeepAliveListener.Accept(0xc0000a85b8, 0xc0000c3d20, 0x4b6d26, 0x60f11571, 0x442b2e)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/echo.go:963 +0x2f\nnet/http.(*Server).Serve(0xc000144000, 0x7cb720, 0xc0000b6098, 0x0, 0x0)\n\t/usr/lib/go/src/net/http/server.go:2981 +0x285\ngithub.com/labstack/echo/v4.(*Echo).Start(0xc0000d26c0, 0xc0000b2b20, 0x5, 0xc0000b2a95, 0x4)\n\t/home/incrypto/dev/go/pkg/mod/github.com/labstack/echo/v4@v4.4.0/echo.go:671 +0xf3\nmain.main()\n\t/home/incrypto/dev/go_projects/airdropbot/main.go:35 +0x2eb\n\ngoroutine 20 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f69455c0e70, 0x72, 0xffffffffffffffff)\n\t/usr/lib/go/src/runtime/netpoll.go:222 +0x55\ninternal/poll.(*pollDesc).wait(0xc00010e398, 0x72, 0x0, 0x1, 0xffffffffffffffff)\n\t/usr/lib/go/src/internal/poll/fd_poll_runtime.go:87 +0x45\ninternal/poll.(*pollDesc).waitRead(...)\n\t/usr/lib/go/src/internal/poll/fd_poll_runtime.go:92\ninternal/poll.(*FD).Read(0xc00010e380, 0xc00013c401, 0x1, 0x1, 0x0, 0x0, 0x0)\n\t/usr/lib/go/src/internal/poll/fd_unix.go:166 +0x1d5\nnet.(*netFD).Read(0xc00010e380, 0xc00013c401, 0x1, 0x1, 0x0, 0x0, 0x0)\n\t/usr/lib/go/src/net/fd_posix.go:55 +0x4f\nnet.(*conn).Read(0xc0000b60a8, 0xc00013c401, 0x1, 0x1, 0x0, 0x0, 0x0)\n\t/usr/lib/go/src/net/net.go:183 +0x91\nnet/http.(*connReader).backgroundRead(0xc00013c3f0)\n\t/usr/lib/go/src/net/http/server.go:692 +0x58\ncreated by net/http.(*connReader).startBackgroundRead\n\t/usr/lib/go/src/net/http/server.go:688 +0xd5\n\n"
}